# Automated Testing Configuration for SPARC QA
version: "1.0"

test_suites:
  # Unit Testing Configuration
  unit:
    framework: "jest"
    config_file: "jest.config.js"
    
    coverage:
      enabled: true
      reporters: ["text", "lcov", "html"]
      thresholds:
        global:
          branches: 80
          functions: 80
          lines: 80
          statements: 80
        per_file:
          branches: 60
          functions: 60
          lines: 60
          statements: 60
          
    patterns:
      frontend:
        test_match: ["**/*.test.{ts,tsx}", "**/*.spec.{ts,tsx}"]
        test_ignore: ["**/node_modules/**", "**/dist/**"]
        
      backend:
        test_match: ["**/*.test.{ts,js}", "**/*.spec.{ts,js}"]
        test_ignore: ["**/node_modules/**", "**/dist/**"]
        
    mocks:
      - api_calls
      - database_connections
      - external_services
      - file_system
      
  # Integration Testing
  integration:
    framework: "supertest"
    
    database:
      type: "postgresql"
      use_transactions: true
      seed_data: "test/fixtures"
      cleanup: "after_each"
      
    api_tests:
      base_url: "http://localhost:3001"
      auth:
        type: "jwt"
        test_tokens: true
        
      scenarios:
        - name: "user_workflows"
          endpoints: ["/api/auth/*", "/api/users/*", "/api/scripts/*"]
          
        - name: "admin_operations"
          endpoints: ["/api/admin/*", "/api/analytics/*"]
          
        - name: "ai_integration"
          endpoints: ["/api/ai/*", "/api/analysis/*"]
          
    redis_tests:
      enabled: true
      flush_after_each: true
      
  # End-to-End Testing
  e2e:
    framework: "playwright"
    
    browsers:
      - name: "chromium"
        viewport: { width: 1920, height: 1080 }
        
      - name: "firefox"
        viewport: { width: 1920, height: 1080 }
        
      - name: "webkit"
        viewport: { width: 1920, height: 1080 }
        
    devices:
      - "iPhone 13"
      - "iPad Pro"
      - "Pixel 5"
      
    test_scenarios:
      - name: "user_journey"
        steps:
          - login
          - upload_script
          - analyze_script
          - view_results
          - download_report
          
      - name: "admin_workflow"
        steps:
          - admin_login
          - view_analytics
          - manage_users
          - system_settings
          
      - name: "ai_interaction"
        steps:
          - open_chat
          - ask_question
          - receive_response
          - view_suggestions
          
    visual_testing:
      enabled: true
      threshold: 0.1
      ignore_regions: [".timestamp", ".dynamic-content"]
      
  # Performance Testing
  performance:
    framework: "k6"
    
    scenarios:
      load_test:
        executor: "ramping-vus"
        stages:
          - duration: "2m"
            target: 50
          - duration: "5m"
            target: 100
          - duration: "2m"
            target: 0
            
        thresholds:
          http_req_duration: ["p(95)<500"]
          http_req_failed: ["rate<0.1"]
          
      stress_test:
        executor: "ramping-arrival-rate"
        stages:
          - duration: "2m"
            target: 300
          - duration: "5m"
            target: 500
          - duration: "2m"
            target: 0
            
        thresholds:
          http_req_duration: ["p(95)<1000"]
          http_req_failed: ["rate<0.2"]
          
      spike_test:
        executor: "constant-arrival-rate"
        rate: 1000
        duration: "1m"
        preAllocatedVUs: 1000
        
        thresholds:
          http_req_duration: ["p(95)<2000"]
          http_req_failed: ["rate<0.3"]
          
    metrics:
      - response_time
      - throughput
      - error_rate
      - concurrent_users
      
  # Security Testing
  security:
    vulnerability_scanning:
      - tool: "npm audit"
        fail_on: "high"
        auto_fix: true
        
      - tool: "snyk"
        monitor: true
        fail_on: "high"
        
      - tool: "retire.js"
        check_bower: false
        check_npm: true
        
    sast:
      - tool: "eslint-plugin-security"
        rules:
          - "detect-object-injection"
          - "detect-non-literal-regexp"
          - "detect-unsafe-regex"
          
      - tool: "semgrep"
        rulesets:
          - "owasp-top-ten"
          - "nodejs"
          - "typescript"
          
    dast:
      tool: "owasp-zap"
      
      scan_policy:
        attack_strength: "medium"
        alert_threshold: "medium"
        
      contexts:
        - name: "authenticated"
          auth_method: "jwt"
          
        - name: "unauthenticated"
          auth_method: "none"
          
  # Accessibility Testing
  accessibility:
    framework: "pa11y"
    
    standards:
      - "WCAG2AA"
      - "Section508"
      
    runners:
      - "htmlcs"
      - "axe"
      
    ignore_rules:
      - "color-contrast"  # Handled by design system
      
    pages:
      - "/"
      - "/dashboard"
      - "/scripts"
      - "/analytics"
      - "/settings"
      
# Test Automation Pipeline
automation:
  pre_commit:
    - lint
    - unit_tests
    - type_check
    
  pre_push:
    - integration_tests
    - security_scan
    
  ci_pipeline:
    - all_tests
    - coverage_report
    - performance_baseline
    
  nightly:
    - full_e2e
    - stress_test
    - security_audit
    
# Test Data Management
test_data:
  fixtures:
    location: "test/fixtures"
    format: "json"
    
  factories:
    - user_factory
    - script_factory
    - analysis_factory
    
  seed_scripts:
    - "test/seeds/users.sql"
    - "test/seeds/scripts.sql"
    - "test/seeds/analytics.sql"
    
# Reporting
reporting:
  formats:
    - junit
    - html
    - json
    - markdown
    
  destinations:
    - console
    - file
    - ci_artifacts
    
  notifications:
    on_failure:
      - email
      - slack
      
    on_success:
      - ci_status
      
  dashboards:
    - test_trends
    - coverage_history
    - performance_metrics
    - security_status