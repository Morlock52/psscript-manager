import{d as e}from"../assets/index-c53f325e.js";const t=new class{sessionCache=new Map;useLocalStorageOnly=!1;async setSecure(t,a){if(this.sessionCache.set(t,a),localStorage.setItem(t,a),this.useLocalStorageOnly)return;if(localStorage.getItem("authToken"))try{await e.post("/settings/secure-store",{key:t,value:a})}catch(s){401!==s?.status&&403!==s?.status||(this.useLocalStorageOnly=!0)}}async getSecure(t){if(this.sessionCache.has(t))return this.sessionCache.get(t)||null;if(this.useLocalStorageOnly)return localStorage.getItem(t);const a=localStorage.getItem("authToken"),s=localStorage.getItem("authUser");if(!a||!s||"mock-jwt-token-for-development"===a)return localStorage.getItem(t);try{const s=new Promise(e=>{setTimeout(()=>e(localStorage.getItem(t)),100)}),o=fetch(`${e.defaults.baseURL}/settings/secure-store/${t}`,{method:"GET",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"}}).then(async e=>{if(e.ok){const a=await e.json();if(a?.value)return this.sessionCache.set(t,a.value),a.value}else 401!==e.status&&403!==e.status||(this.useLocalStorageOnly=!0,localStorage.removeItem("authToken"),localStorage.removeItem("authUser"));return localStorage.getItem(t)}).catch(()=>localStorage.getItem(t));return await Promise.race([o,s])}catch{return localStorage.getItem(t)}}async removeSecure(t){try{await e.delete(`/settings/secure-store/${t}`),this.sessionCache.delete(t)}catch(a){throw console.error("Failed to remove secure data:",a),a}}clearCache(){this.sessionCache.clear(),this.useLocalStorageOnly=!1}async hasValidApiKey(){try{return(await e.get("/settings/api-key-status")).data.hasValidKey}catch(t){return!1}}};window.addEventListener("storage",e=>{"logout"===e.key&&t.clearCache()});export{t as s};
