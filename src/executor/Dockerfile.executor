# Use a base image with both Node.js and PowerShell
# Example: Using Node 18 on Debian/Ubuntu which allows easy PowerShell installation
FROM node:18-slim

# Install PowerShell Core
# See https://learn.microsoft.com/en-us/powershell/scripting/install/install-debian
# Or https://learn.microsoft.com/en-us/powershell/scripting/install/install-ubuntu
# Using Debian Bullseye steps as base image is node:18-slim (Debian 11 Bullseye)
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        wget \
        apt-transport-https \
        software-properties-common \
        ca-certificates \
        less \
        # Add any other system dependencies needed by scripts or the executor
    # Download PowerShell 7.4.2 for Debian ARM64 (adjust version if needed)
    && wget https://github.com/PowerShell/PowerShell/releases/download/v7.4.2/powershell_7.4.2-1_arm64.deb \
    # Install PowerShell from the downloaded package
    && dpkg -i powershell_7.4.2-1_arm64.deb \
    # Install any missing dependencies required by PowerShell
    && apt-get install -f -y \
    # Clean up
    && rm powershell_7.4.2-1_arm64.deb \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user and group
RUN groupadd --gid 1001 node \
  && useradd --uid 1001 --gid node --shell /bin/bash --create-home node

# Set working directory
WORKDIR /app

# Copy package files and install Node.js dependencies
COPY package*.json ./
RUN npm ci --only=production

# Copy the rest of the executor application code
COPY . ./

# Copy the PowerShell execution script
COPY run-script.ps1 ./run-script.ps1
RUN chmod +x ./run-script.ps1

# Change ownership to the non-root user
RUN chown -R node:node /app

# Switch to the non-root user
USER node

# Expose the port the API server will run on
EXPOSE ${EXECUTOR_API_PORT:-5001}

# Command to start the Node.js API server
CMD ["node", "server.js"]
